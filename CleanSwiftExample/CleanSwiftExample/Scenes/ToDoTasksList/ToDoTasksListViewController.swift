//
//  ToDoTasksListViewController.swift
//  CleanSwiftExample
//
//  Created by Cesar Brenes on 6/6/17.
//  Copyright (c) 2017 CÃ©sar Brenes Solano. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

protocol ToDoTasksListViewControllerInput{
    func displayTestInformation(viewModel: ToDoTasksList.TestInformation.ViewModel)
    func displayDataSource(viewModel: ToDoTasksList.DataSource.ViewModel)
}

protocol ToDoTasksListViewControllerOutput{
    func requestTestInformation(request: ToDoTasksList.TestInformation.Request)
    func requestDataSource(request: ToDoTasksList.DataSource.Request)
}

class ToDoTasksListViewController: UIViewController, ToDoTasksListViewControllerInput{
    var output: ToDoTasksListViewControllerOutput!
    var router: ToDoTasksListRouter!
    var taskArray: [ToDoTasksList.TaskModelCell] = []
    
    @IBOutlet weak var tableView: UITableView!
    // MARK: Object lifecycle
    
    override func awakeFromNib(){
        super.awakeFromNib()
        ToDoTasksListConfigurator.sharedInstance.configure(viewController: self)
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad(){
        super.viewDidLoad()
        requestTestInformation(number: "5")
        requestDataSource()
        registerCustomCell()
    }
    
    // MARK: Event handling
    
    func requestTestInformation(number: String){
        let request = ToDoTasksList.TestInformation.Request(numberText: number)
        output.requestTestInformation(request: request)
    }
    
    
    func requestDataSource(){
        let request = ToDoTasksList.DataSource.Request()
        output.requestDataSource(request: request)
    }
    
    func displayDataSource(viewModel: ToDoTasksList.DataSource.ViewModel){
        print("ARRAY SIZE: \(viewModel.tasks.count)")
        taskArray = viewModel.tasks
        tableView.reloadData()
    }
    
    // MARK: Display logic
    func displayTestInformation(viewModel: ToDoTasksList.TestInformation.ViewModel){
        print("EL RESULTADO ES \(viewModel.numberText)")
    }
}

extension ToDoTasksListViewController: UITableViewDataSource, UITableViewDelegate{
    
    func registerCustomCell(){
        let nib = UINib(nibName: "ToDoListCustomCell", bundle: nil)
        tableView.register(nib, forCellReuseIdentifier: "ToDoListCustomCell")
    }
    
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return taskArray.count
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell = tableView.dequeueReusableCell(withIdentifier: "ToDoListCustomCell") as! ToDoListCustomCell
        cell.setupCell(task: taskArray[indexPath.row])
        return cell
    }

}
